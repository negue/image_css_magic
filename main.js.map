{"version":3,"sources":["./src/app/auto-scale/auto-scale.component.ts","./src/app/auto-scale/auto-scale.component.html","./src/environments/environment.ts","./src/app/array-sort-pipe.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/auto-scale/value-or-default.pipe.ts","./src/app/app.module.ts","./src/app/JSONCrush.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, HostBinding, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-auto-scale',\n  templateUrl: './auto-scale.component.html',\n  styleUrls: ['./auto-scale.component.scss']\n})\nexport class AutoScaleComponent implements OnInit {\n\n  @HostBinding('style.--zoom_out_width.px')\n  @Input()\n  width: number = 100;\n\n  @HostBinding('style.--zoom_out_height.px')\n  @Input()\n  height: number = 100;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"zoom_out_parent\">\n  <div class=\"zoom_out\" #zoomOutElement\n   [style.--scale-width]=\"(width / zoomOutElement.scrollWidth)| valueOrDefault: 1\"\n         [style.--scale-height]=\"(height / zoomOutElement.scrollHeight) |valueOrDefault: 1\"\n  >\n    <ng-content></ng-content>\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n  name: \"sort\"\n})\nexport class ArraySortPipe  implements PipeTransform {\n  transform(array: any[], field: string): any[] {\n    if (!Array.isArray(array)) {\n      return array;\n    }\n    const newArray = [...array];\n    newArray.sort((a: any, b: any) => {\n      if (a[field] < b[field]) {\n        return -1;\n      } else if (a[field] > b[field]) {\n        return 1;\n      } else {\n        return 0;\n      }\n    });\n    return newArray;\n  }\n}\n","import {\n  ChangeDetectionStrategy, ChangeDetectorRef,\n  Component,\n  ElementRef,\n  OnDestroy,\n  OnInit,\n  TrackByFunction,\n  ViewChild\n} from '@angular/core';\nimport { BehaviorSubject, combineLatest, Subject } from 'rxjs';\nimport {debounceTime, map, takeUntil, tap} from 'rxjs/operators';\nimport { ArraySortPipe } from './array-sort-pipe';\nimport { toPng } from 'html-to-image';\nimport * as localforage from 'localforage';\n\nimport {JSONCrush, JSONUncrush} from './JSONCrush';\nimport {Clipboard} from '@angular/cdk/clipboard';\n\ninterface CssFilterEntry {\n  order: number;\n  type: string;\n  value: string;\n  enabled: boolean;\n}\n\ninterface OptionsState {\n  useMask: boolean;\n  opacity: number;\n\n  useCustomCssBelowImage: boolean;\n  customCssBelowImage: string;\n\n  useCustomCssAboveImage: boolean;\n  customCssAboveImage: string;\n}\n\nconst DEFAULT_OPTIONS_STATE: OptionsState = {\n  useMask: true,\n  opacity: 50,\n  useCustomCssBelowImage: false,\n  useCustomCssAboveImage: false,\n  customCssBelowImage: '  background: conic-gradient(red, yellow, lime, aqua, blue, magenta, red);',\n  customCssAboveImage: '  background: conic-gradient(red, yellow, lime, aqua, blue, magenta, red);',\n};\n\nfunction createDefaultCssFilters(): CssFilterEntry[] {\n  let order = 0;\n  const enabled = false;\n\n  return [\n    {\n      type: 'hue-rotate',\n      value: '90deg',\n      order: order++,\n      enabled\n    },\n    {\n      type: 'grayscale',\n      value: '70%',\n      order: order++,\n      enabled\n    },\n    {\n      type: 'blur',\n      value: '5px',\n      order: order++,\n      enabled\n    },\n    {\n      type: 'brightness',\n      value: '2',\n      order: order++,\n      enabled\n    },\n    {\n      type: 'contrast',\n      value: '200%',\n      order: order++,\n      enabled\n    },\n    {\n      type: 'drop-shadow',\n      value: '16px 16px 10px black',\n      order: order++,\n      enabled\n    },\n    {\n      type: 'invert',\n      value: '100%',\n      order: order++,\n      enabled\n    },\n\n    {\n      type: 'saturate',\n      value: '100%',\n      order: order++,\n      enabled\n    },\n\n    {\n      type: 'sepia',\n      value: '100%',\n      order: order++,\n      enabled\n    }\n  ];\n}\n\ninterface ShareableLinkData {\n  cssFilters: CssFilterEntry[];\n  options: OptionsState;\n}\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  private cssFilterSubject$ = new BehaviorSubject<CssFilterEntry[]>([]);\n  private updateOtherOptionsSubject$ = new BehaviorSubject(null);\n  // tslint:disable-next-line:variable-name\n  private _destroy$ = new Subject();\n\n  title = 'image-css-magic';\n\n  cssFilterArray$ =  this.cssFilterSubject$.asObservable().pipe(\n    map(entries => this.arraySortingPipe.transform(entries, 'order'))\n  );\n\n  cssFilterString$ = this.cssFilterArray$.pipe(\n    map(value => {\n      const enabledFilters = value.filter(e => e.enabled);\n\n      return enabledFilters.map(e => `${e.type}(${e.value})`).join(' ');\n    })\n  );\n\n\n\n  @ViewChild('targetImage')\n  image: ElementRef<HTMLImageElement> | null = null;\n\n\n  @ViewChild('canvasElement')\n  canvas: ElementRef<HTMLCanvasElement> | null = null;\n\n\n  @ViewChild('holdingElement')\n  holding: ElementRef<HTMLDivElement> | null = null;\n\n  public downloadButtonEnabled = false;\n\n  public imagePath = '';\n\n  public optionsState: OptionsState = DEFAULT_OPTIONS_STATE;\n\n  private fr = new FileReader();\n\n  constructor(private arraySortingPipe: ArraySortPipe,\n              private cd: ChangeDetectorRef,\n              private clipboard: Clipboard) {\n    this.cssFilterSubject$.next(createDefaultCssFilters());\n\n    this.fr.onload = (e) => {\n      if (!this.image) {\n        return;\n      }\n\n      if (typeof this.fr.result === 'string') {\n        this.imagePath = this.fr.result;\n        this.downloadButtonEnabled = false;\n        this.cd.detectChanges();\n\n        setTimeout(() => {\n          this.cd.detectChanges();\n          this.updateOtherOptionsSubject$.next(null);\n        }, 120);\n\n\n        localforage.setItem('current_image', this.imagePath);\n      } else {\n        alert('WAT');\n      }\n    };\n\n    combineLatest([\n      this.cssFilterSubject$,\n      this.updateOtherOptionsSubject$\n    ]).pipe(\n      takeUntil(this._destroy$),\n      tap(() => {\n        this.downloadButtonEnabled = false;\n        this.cd.markForCheck();\n      }),\n      debounceTime(2500)\n    ).subscribe(() => {\n      if (!this.holding?.nativeElement){\n        return;\n      }\n\n      localforage.setItem('options_state', this.optionsState);\n      localforage.setItem('css_filters', this.cssFilterSubject$.value);\n\n\n      toPng(this.holding?.nativeElement).then(dataPath => {\n\n        var img = new Image();\n        img.src = dataPath;\n\n        img.onload = () => {\n          const canvas = this.canvas?.nativeElement;\n          const ctx = canvas?.getContext('2d');\n          if (ctx) {\n            ctx.clearRect(0, 0, canvas?.width ?? 0, canvas?.height ?? 0);\n            ctx.drawImage(img, 0, 0);\n\n            this.downloadButtonEnabled = true;\n            this.cd.detectChanges();\n          }\n        };\n      } );\n    });\n  }\n\n  trackByFilter: TrackByFunction<CssFilterEntry> = (index, item) => item.type;\n\n  displaySelectedImage(inputElement: HTMLInputElement): void {\n    const gotAFile = inputElement.files?.[0];\n\n    if (gotAFile) {\n      this.fr.readAsDataURL(gotAFile);\n    }\n  }\n\n  updateList(): void {\n    this.cssFilterSubject$.next([...this.cssFilterSubject$.value]);\n  }\n\n  updateOtherOptions(): void {\n    this.updateOtherOptionsSubject$.next(null);\n  }\n\n  ngOnDestroy(): void {\n    this._destroy$.next();\n    this._destroy$.complete();\n  }\n\n  downloadToImage(canvasElement: HTMLCanvasElement): void {\n    const fileName = prompt('Filename?');\n\n    if (!fileName) {\n      return;\n    }\n\n    var link = document.createElement('a');\n    link.download = `${fileName}.png`;\n    link.href = canvasElement.toDataURL();\n    link.click();\n  }\n\n  async ngOnInit(): Promise<void> {\n    const lastImage = await localforage.getItem<string>('current_image') ?? '';\n\n    this.imagePath = lastImage;\n\n    const urlParams = new URLSearchParams(window.location.search);\n    const preset = urlParams.get('preset');\n\n    const uncrushedPreset = JSONUncrush(preset);\n    const data: ShareableLinkData = JSON.parse(uncrushedPreset);\n\n    console.info(data);\n\n    this.optionsState = data?.options\n      ?? await localforage.getItem('options_state')\n      ?? DEFAULT_OPTIONS_STATE;\n\n    const savedCssFilters = data?.cssFilters\n      ?? await localforage.getItem<CssFilterEntry[]>('css_filters')\n      ?? createDefaultCssFilters();\n\n    this.cssFilterSubject$.next(savedCssFilters);\n  }\n\n  copyShareLink(): void {\n    const shareableData: ShareableLinkData = {\n      cssFilters: this.cssFilterSubject$.value,\n      options: this.optionsState\n    };\n\n    const json = JSON.stringify(shareableData);\n\n    // JSONCrush\n    const crushedJson = JSONCrush(json);\n\n    const linkToShare = `${location.origin}${location.pathname}?preset=${crushedJson}`;\n\n    console.info({\n      json,\n      jsonLength: json.length,\n      crushedJson,\n      crushedLength: crushedJson.length,\n      linkToShare\n    });\n\n    this.clipboard.copy(linkToShare);\n  }\n}\n","<div class=\"columns\">\n  <div class=\"column flex_cards sticky_top\" style=\"align-self: flex-start;\">\n    <mat-card class=\"example-card\">\n      <mat-card-header>\n\n        <mat-card-title class=\"flex_center\">\n          Source\n          <button mat-stroked-button color=\"primary\" (click)=\"inputElement.click()\">\n            <mat-icon svgIcon=\"search\"></mat-icon>\n            Open Image\n          </button>\n        </mat-card-title>\n      </mat-card-header>\n\n      <app-auto-scale [width]=\"200\" [height]=\"200\"\n                      mat-card-image\n      >\n\n        <img  [src]=\"imagePath\"/>\n      </app-auto-scale>\n    </mat-card>\n\n    <input id=\"src\" type=\"file\" (change)=\"displaySelectedImage(inputElement)\"\n           #inputElement style=\"display: none\"/>\n\n    <canvas #canvasElement class=\"zoom_out\"\n            style=\"display: none\"\n            [width]=\"targetImage.width\"\n            [height]=\"targetImage.height\"></canvas>\n\n\n    <mat-card class=\"example-card\">\n      <mat-card-header>\n\n        <mat-card-title class=\"flex_center\">\n          with Effects\n\n          <button mat-stroked-button color=\"accent\"\n                  [disabled]=\"!downloadButtonEnabled\"\n                  (click)=\"downloadToImage(canvasElement)\">\n            Download\n          </button>\n        </mat-card-title>\n      </mat-card-header>\n\n      <app-auto-scale [width]=\"200\" [height]=\"200\"\n      >\n        <div class=\"holding_parent\"\n             [style.filter]=\"cssFilterString$|async\" #holdingElement>\n          <div class=\"absolute\"\n               [style.opacity.%]=\"optionsState.opacity\"\n               [style]=\"optionsState.useCustomCssAboveImage ? optionsState.customCssAboveImage : null\"\n               [style.mask-image]=\"optionsState.useMask ? 'url('+imagePath+')' : null\"\n               [style.-webkit-mask-image]=\"optionsState.useMask ? 'url('+imagePath+')' : null\">\n\n          </div>\n\n          <img #targetImage [src]=\"imagePath\"/>\n\n          <div class=\"absolute\"\n               style=\"z-index: -1;\"\n               [style]=\"optionsState.useCustomCssBelowImage ? optionsState.customCssBelowImage : null\">\n\n          </div>\n\n        </div>\n      </app-auto-scale>\n    </mat-card>\n\n\n    <button mat-raised-button (click)=\"copyShareLink()\">Copy Link</button>\n  </div>\n\n  <div class=\"column\">\n\n    <mat-tab-group class=\"tab_group_height\">\n      <mat-tab label=\"CSS Filters\" class=\"flex_rows\">\n        <ng-container *ngIf=\"cssFilterArray$| async as filterArray\">\n          <div *ngFor=\"let cssFilterEntry of filterArray; trackBy: trackByFilter\"\n          >\n            <mat-checkbox [(ngModel)]=\"cssFilterEntry.enabled\"\n                          (change)=\"updateList()\">\n              {{cssFilterEntry.type}}\n            </mat-checkbox>\n\n            <br>\n\n            <mat-form-field appearance=\"outline\">\n              <mat-label>Value</mat-label>\n              <input type=\"text\" matInput\n                     [(ngModel)]=\"cssFilterEntry.value\"\n                     (change)=\"updateList()\">\n            </mat-form-field>\n\n\n            <mat-form-field appearance=\"outline\">\n              <mat-label>Order</mat-label>\n              <input type=\"number\" matInput\n                     [(ngModel)]=\"cssFilterEntry.order\"\n                     (change)=\"updateList()\">\n            </mat-form-field>\n          </div>\n        </ng-container>\n      </mat-tab>\n      <mat-tab label=\"Overlay & Background\">\n        <div class=\"flex_rows\">\n          <h3>Custom CSS Above the Image</h3>\n\n          <mat-checkbox [(ngModel)]=\"optionsState.useMask\" (change)=\"updateOtherOptions()\">\n            Use the source image as mask\n          </mat-checkbox>\n          <mat-form-field appearance=\"outline\">\n            <mat-label>Opacity</mat-label>\n            <input type=\"number\" matInput [max]=\"100\" [min]=\"0\"\n                   (change)=\"updateOtherOptions()\"\n                   [(ngModel)]=\"optionsState.opacity\">\n          </mat-form-field>\n\n          <mat-checkbox [(ngModel)]=\"optionsState.useCustomCssAboveImage\"\n                        (change)=\"updateOtherOptions()\">\n            Use custom CSS above the image\n          </mat-checkbox>\n          <mat-form-field appearance=\"outline\">\n            <mat-label>Custom CSS above the image</mat-label>\n            <textarea matInput style=\"min-height: 6rem\"\n                      (change)=\"updateOtherOptions()\"\n                      [(ngModel)]=\"optionsState.customCssAboveImage\">\n\n    </textarea>\n          </mat-form-field>\n\n\n          <h3>Custom CSS Below the Image</h3>\n\n\n          <mat-checkbox [(ngModel)]=\"optionsState.useCustomCssBelowImage\"\n                        (change)=\"updateOtherOptions()\">\n            Use custom CSS below the image\n          </mat-checkbox>\n          <mat-form-field appearance=\"outline\">\n            <mat-label>Custom CSS below the image</mat-label>\n            <textarea matInput style=\"min-height: 6rem\"\n                      (change)=\"updateOtherOptions()\"\n                      [(ngModel)]=\"optionsState.customCssBelowImage\">\n\n    </textarea>\n          </mat-form-field>\n        </div>\n      </mat-tab>\n    </mat-tab-group>\n\n  </div>\n\n</div>\n\n\n\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'valueOrDefault'\n})\nexport class ValueOrDefaultPipe implements PipeTransform {\n\n  transform(value: number, defaultValue: number): number {\n    if (!isFinite(value)) {\n      return defaultValue;\n    }\n    return value;\n  }\n\n}\n","import {BrowserModule, DomSanitizer} from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport {ArraySortPipe} from './array-sort-pipe';\nimport {FormsModule} from '@angular/forms';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport { AutoScaleComponent } from './auto-scale/auto-scale.component';\nimport { ValueOrDefaultPipe } from './auto-scale/value-or-default.pipe';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatIconModule, MatIconRegistry} from '@angular/material/icon';\nimport {HttpClientModule} from '@angular/common/http';\nimport {ClipboardModule} from '@angular/cdk/clipboard';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ArraySortPipe,\n    AutoScaleComponent,\n    ValueOrDefaultPipe\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    MatCheckboxModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    BrowserAnimationsModule,\n    MatTabsModule,\n    MatCardModule,\n    MatIconModule,\n    HttpClientModule,\n    ClipboardModule\n  ],\n  providers: [ArraySortPipe],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n  constructor(\n    private iconRegistry: MatIconRegistry,\n    private sanitizer: DomSanitizer\n  ) {\n    for (const icon of ['search']) {\n      iconRegistry.addSvgIcon(icon, sanitizer.bypassSecurityTrustResourceUrl(\n        `./assets/material_icons/${icon}.svg`\n      ));\n    }\n  }\n}\n","\n///////////////////////////////////////////////////////////////////////\n// JSONCrush by Frank Force [MIT] https://github.com/KilledByAPixel/JSONCrush\n///////////////////////////////////////////////////////////////////////\n\n/* tslint:disable */\n// @ts-nocheck\n\n// ==ClosureCompiler==\n// @compilation_level ADVANCED_OPTIMIZATIONS\n// @language_out ECMASCRIPT_2019\n// @js_externs JSONCrush, JSONUncrush, JSONCrushSwap\n// @output_file_name JSONCrush.min.js\n// ==/ClosureCompiler==\n\nexport const JSONCrush=(string, maxSubstringLength=50)=>\n{\n    const delimiter = '\\u0001'; // used to split parts of crushed string\n\n    const JSCrush=(string, replaceCharacters)=>\n    {\n        // JSCrush Algorithm (repleace repeated substrings with single characters)\n        let replaceCharacterPos = replaceCharacters.length;\n        let splitString = '';\n\n        const ByteLength =(string)=>encodeURI(encodeURIComponent(string)).replace(/%../g,'i').length;\n        const HasUnmatchedSurrogate =(string)=>\n        {\n            // check ends of string for unmatched surrogate pairs\n            let c1 = string.charCodeAt(0);\n            let c2 = string.charCodeAt(string.length-1);\n            return (c1 >= 0xDC00 && c1 <= 0xDFFF) || (c2 >= 0xD800 && c2 <= 0xDBFF);\n        }\n\n        // count instances of substrings\n        let substringCount = {};\n        for (let substringLength = 2; substringLength < maxSubstringLength; substringLength++)\n        for (let i = 0; i < string.length - substringLength; ++i)\n        {\n            let substring = string.substr(i, substringLength);\n\n            // don't recount if already in list\n            if (substringCount[substring])\n                continue;\n\n            // prevent breaking up unmatched surrogates\n            if (HasUnmatchedSurrogate(substring))\n                continue;\n\n            // count how many times the substring appears\n            let count = 1;\n            for (let substringPos = string.indexOf(substring, i+substringLength); substringPos >= 0; ++count)\n                substringPos = string.indexOf(substring, substringPos + substringLength);\n\n            // add to list if it appears multiple times\n            if (count > 1)\n                substringCount[substring] = count;\n        }\n\n        while(true) // loop while string can be crushed more\n        {\n            // get the next character that is not in the string\n            for (;replaceCharacterPos-- && string.includes(replaceCharacters[replaceCharacterPos]);){}\n            if (replaceCharacterPos < 0)\n                break; // ran out of replacement characters\n            let replaceCharacter = replaceCharacters[replaceCharacterPos];\n\n            // find the longest substring to replace\n            let bestSubstring;\n            let bestLengthDelta = 0;\n            let replaceByteLength = ByteLength(replaceCharacter);\n            for (let substring in substringCount)\n            {\n                // calculate change in length of string if it substring was replaced\n                let count = substringCount[substring];\n                let lengthDelta = (count-1)*ByteLength(substring) - (count+1)*replaceByteLength;\n                if (!splitString.length)\n                    lengthDelta -= ByteLength(delimiter); // include the delimiter length\n                if (lengthDelta <= 0)\n                    delete substringCount[substring]\n                else if (lengthDelta > bestLengthDelta)\n                {\n                    bestSubstring = substring\n                    bestLengthDelta = lengthDelta;\n                }\n            }\n            if (!bestSubstring)\n                break; // string can't be compressed further\n\n            // create new string with the split character\n            string = string.split(bestSubstring).join(replaceCharacter) + replaceCharacter + bestSubstring;\n            splitString = replaceCharacter + splitString;\n\n            // update substring count list after the replacement\n            let newSubstringCount = {};\n            for (let substring in substringCount)\n            {\n                // make a new substring with the replacement\n                let newSubstring = substring.split(bestSubstring).join(replaceCharacter);\n\n                // count how many times the new substring appears\n                let count = 0;\n                for (let i = string.indexOf(newSubstring); i >= 0; ++count)\n                    i = string.indexOf(newSubstring, i + newSubstring.length);\n\n                // add to list if it appears multiple times\n                if (count > 1)\n                    newSubstringCount[newSubstring] = count;\n\n            }\n            substringCount = newSubstringCount;\n        }\n\n        return {a:string, b:splitString};\n    }\n\n    // create a string of replacement characters\n    let characters = [];\n\n    // prefer replacing with characters that will not be escaped by encodeURIComponent\n    const unescapedCharacters = `-_.!~*'()`;\n    for (let i=127; --i;)\n    {\n        if\n        (\n            (i>=48 && i<=57) || // 0-9\n            (i>=65 && i<=90) || // A-Z\n            (i>=97 && i<=122)|| // a-z\n            unescapedCharacters.includes(String.fromCharCode(i))\n        )\n            characters.push(String.fromCharCode(i));\n    }\n\n    // pick from extended set last\n    for (let i=32; i<255; ++i)\n    {\n        let c = String.fromCharCode(i);\n        if (c!='\\\\' && !characters.includes(c))\n            characters.unshift(c);\n    }\n\n    // remove delimiter if it is found in the string\n    string = string.replace(new RegExp(delimiter,'g'),'');\n\n    // swap out common json characters\n    string = JSONCrushSwap(string);\n\n    // crush with JS crush\n    const crushed = JSCrush(string, characters);\n\n    // insert delimiter between JSCrush parts\n    let crushedString = crushed.a;\n    if (crushed.b.length)\n        crushedString += delimiter + crushed.b;\n\n    // fix issues with some links not being recognized properly\n    crushedString += '_'\n\n    // encode URI\n    return encodeURIComponent(crushedString);\n}\n\nexport const JSONUncrush=(string)=>\n{\n    // string must be a decoded URI component, searchParams.get() does this automatically\n\n    // remove last character\n    string = string.substring(0, string.length - 1);\n\n    // unsplit the string using the delimiter\n    const stringParts = string.split('\\u0001');\n\n    // JSUncrush algorithm\n    let uncrushedString = stringParts[0];\n    if (stringParts.length > 1)\n    {\n        let splitString = stringParts[1];\n        for (let character of splitString)\n        {\n            // split the string using the current splitCharacter\n            let splitArray = uncrushedString.split(character);\n\n            // rejoin the string with the last element from the split\n            uncrushedString = splitArray.join(splitArray.pop());\n        }\n    }\n\n    // unswap the json characters in reverse direction\n    return JSONCrushSwap(uncrushedString, 0);\n}\n\nconst JSONCrushSwap=(string, forward=1)=>\n{\n    // swap out characters for lesser used ones that wont get escaped\n    const swapGroups =\n    [\n        ['\"', \"'\"],\n        [\"':\", \"!\"],\n        [\",'\", \"~\"],\n        ['}', \")\", '\\\\', '\\\\'],\n        ['{', \"(\", '\\\\', '\\\\'],\n    ];\n\n    const Swap=(string, g)=>\n    {\n        let regex = new RegExp(`${(g[2]?g[2]:'')+g[0]}|${(g[3]?g[3]:'')+g[1]}`,'g');\n        return string.replace(regex, $1 => ($1 === g[0] ? g[1] : g[0]));\n    }\n\n    // need to be able to swap characters in reverse direction for uncrush\n    if (forward)\n        for (let i = 0; i < swapGroups.length; ++i)\n            string = Swap(string, swapGroups[i]);\n    else\n        for (let i = swapGroups.length; i--;)\n            string = Swap(string, swapGroups[i]);\n\n    return string;\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}